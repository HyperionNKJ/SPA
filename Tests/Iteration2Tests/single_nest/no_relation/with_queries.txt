1 - To be filled
procedure p;
Select BOOLEAN with 12 = 12
TRUE
5000
2 - To be filled
procedure p;
Select BOOLEAN with 12 = 21
FALSE
5000
3 - To be filled
procedure p;
Select BOOLEAN with 12 = 12 = 12
none
5000
4 - To be filled
procedure AlbertEinstein; constant IQ;
Select AlbertEinstein with IQ.value = 15
main, P, Q
5000
5 - To be filled
procedure Albert; constant Einstein, IQ;
Select <Albert, Einstein> with IQ.value = 15
main 15, main 16, main 7, main 5, P 15, P 16, P 7, P 5, Q 15, Q 16, Q 7, Q 5
5000
6 - To be filled
procedure Kaijun; constant IQ;
Select Kaijun with IQ.value = 200
none
5000
7 - To be filled
procedure eLePHAnT241214;
Select eLePHAnT241214 with 12 = "second"
none
5000
8 - To be filled
procedure HYPERION123;
Select HYPERION123 with 12 = p.procName
none
5000
9 - To be filled
procedure Kaijun; assign a;
Select Kaijun with 12 = a.stmt#
main, P, Q
5000
10 - To be filled
procedure pokemon; assign a;
Select pokemon with a.stmt# = 12
main, P, Q
5000
11 - To be filled
procedure p;
Select p with a = 12
none
5000
12 - To be filled
procedure p; constant c;
Select p with c.value = 12
none
5000
13 - To be filled
procedure p; constant c; prog_line n;
Select p with n = 15
main, P, Q
5000
14 - To be filled
procedure p; constant c; prog_line n;
Select p with 15 = n
main, P, Q
5000
15 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with 15 = n
TRUE
5000
16 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with 150 = n
FALSE
5000
17 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with 15 == n
none
5000
18 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with -15 = n
none
5000
19 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with = n
none
5000
20 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with = with
none
5000
21 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "with" = "with"
TRUE
5000
22 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "with" = "with" with
none
5000
23 - To be filled - TO BE VERIFIED. SYNTAX? SEMANTIC ERROR?
procedure p; constant c; prog_line n;
Select BOOLEAN with random = n
FALSE
5000
24 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "one" = "one"
TRUE
5000
25 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "one" = "onee"
FALSE
5000
26 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "one" = 12
FALSE
5000
27 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "one" = p.procName
FALSE
5000
28 - To be filled
procedure p; constant c; prog_line n;
Select BOOLEAN with "P" = p.procName
TRUE
5000
29 - To be filled
procedure p; constant c; prog_line n; read r;
Select BOOLEAN with "x" = r.varName
TRUE
5000
30 - To be filled
procedure p; constant c; prog_line n; read r;
Select BOOLEAN with "x" = r.stmt#
FALSE
5000
31 - To be filled
procedure p; constant c; prog_line n; read r;
Select BOOLEAN with "x" = c.value
FALSE
5000
32 - To be filled
procedure p; constant c; prog_line n; read r;
Select BOOLEAN with p.procName = p.procName
TRUE
5000
33 - To be filled
procedure p; constant c; prog_line n; read r;
Select p with p.procName = p.procName
main, P, Q
5000
34 - To be filled
procedure p; constant c; prog_line n; read r;
Select p with p.procName = p
none
5000
35 - To be filled
procedure p; constant c; prog_line n; read r;
Select p with p.procName = r.varName
none
5000
36 - To be filled
procedure p; constant c; prog_line n; read r; variable v;
Select BOOLEAN with v.varName = r.varName
TRUE
5000
37 - To be filled
procedure p; constant c; prog_line n; read r; variable v;
Select <v, r> with v.varName = r.varName
a 1, b 2, c 3, x 17
5000
38 - To be filled
procedure p; constant c; prog_line n; read r; variable v;
Select <v, r> with v.varName = v.varName
a 1, a 2, a 3, a 17, b 1, b 2, b 3, b 17, c 1, c 2, c 3, c 17, x 1, x 2, x 3, x 17, k 1, k 2, k 3, k 17
5000
39 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <v, r> with pt.varName = pt.varName
a 1, a 2, a 3, a 17, b 1, b 2, b 3, b 17, c 1, c 2, c 3, c 17, x 1, x 2, x 3, x 17, k 1, k 2, k 3, k 17
5000
39 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt, pt> with pt.varName = pt.varName
29 29
5000
40 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt, pt.varName> with pt.varName = pt.varName
29 k
5000
41 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt.varName, pt.varName> with pt.varName = pt.varName
k k
5000
42 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt.varName, pt.varName, pt.varName, pt.varName, pt.varName, pt.varName> with pt.varName = pt.varName
k k k k k k
5000
43 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt.varName, r.varName, pt.varName, pt.varName, pt.varName, pt.varName> with pt.varName = pt.varName
k a k k k k, k b k k k k, k c k k k k, k x k k k k
5000
44 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt.varName> with pt.varName = pt.varName
k
5000
45 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt;
Select <pt.varName> with pt.varName = r.varName
none
5000
46 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt; call cl;
Select <pt.varName> with cl.procName = r.varName
none
5000
47 - Invalid
procedure p; constant c; prog_line n; read r; variable v; print pt; call cl;
Select <cl> with cl.procName = r.varName
none
5000
48 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt; call cl;
Select <cl.stmt#> with cl.procName = p.procName
4, 27
5000
49 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt; call cl;
Select <cl.procName> with cl.procName = p.procName
P, Q
5000
50 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt; call cl;
Select <cl.procName, c> with cl.procName = p.procName
P 15, P 16, P 7, P 5, Q 15, Q 16, Q 7, Q 5
5000
51 - To be filled
procedure p; constant c; prog_line n; read r; variable v; print pt; call cl;
Select <c, c> with cl.procName = cl.procName
15 15, 16 16, 7 7, 5 5
5000
52 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select <c, c1> with cl.procName = cl.procName
15 15, 15 16, 15 7, 15 5, 16 15, 16 16, 16 7, 16 5, 7 15, 7 16, 7 7, 7 5, 5 15, 5 16, 5 7, 5 5
5000
53 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with cl.procName = cl.stmt#
FALSE
5000
54 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with cl.procName = r.stmt#
FALSE
5000
55 - INVALID TO BE VERIFIED: Syntatic / Semantic error?
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with r.varName = v.stmt#
FALSE
5000
56 - INVALID TO BE VERIFIED: Syntatic / Semantic error?
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with r.varName = n.stmt#
FALSE
5000
57 - To be filled TO BE VERIFIED: Syntatic / Semantic error?
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with w.stmt# = r.varName
FALSE
5000
58 - To be filled - TO BE VERIFIED: Implement or not?
procedure BOOLEAN, p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with r.varName = p.procName
none
5000
59 - Synonym p is not declared, BOOLEAN treated as BOOLEAN (TRUE/FALSE) - TO BE VERIFIED: Implement or not?
procedure BOOLEAN, p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with cl.procName = p.procName
P, Q, main
5000
60 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with cl.procName = c.value
FALSE
5000
61 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with c.value = pt.varName
FALSE
5000
62 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with n = pt.varName
FALSE
5000
63 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select BOOLEAN with pt.varName = n
FALSE
5000
64 - No ambiguity here since BOOLEAN is in tuple and therefore has to be a synonym - TO BE VERIFIED: Implement or not?
procedure BOOLEAN; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select <BOOLEAN> with pt.varName = pt.varName
P, Q, main
5000
65 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select pt with pt.varName = pt.varName
29
5000
66 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select pt with pt.stmt# = "second"
none
5000
67 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select pt with cl.stmt# = 5
none
5000
68 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select pt with cl.stmt# = 4
29
5000
69 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select pt with r.stmt# = 4
none
5000
70 - To be filled
procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select r with r.stmt# = 2
2
5000
71 - To be filled
stmt s; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select s with s.stmt# = 30
none
5000
72 - To be filled
stmt s; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select s with s.stmt# = 29
29
5000
73 - To be filled
stmt s; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select s with s.stmt# = s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
74 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select s with s.stmt# = s1.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
75 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select s with s.stmt# = r.stmt#
1, 2, 3, 17
5000
76 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select r with s.stmt# = r.stmt#
1, 2, 3, 17
5000
77 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select <r, s> with s.stmt# = r.stmt#
1 1, 2 2, 3 3, 17 17
5000
78 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select <v> with s.stmt# = r.stmt#
a, b, c, x, k
5000
79 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r; variable v; print pt; call cl;
Select <r, r> with r.stmt# = r.stmt#
1 1, 2 2, 3 3, 17 17
5000
80 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select <r1, r2> with r.stmt# = r1.stmt#
1 1, 1 2, 1 3, 1 17, 2 1, 2 2, 2 3, 2 17, 3 1, 3 2, 3 3, 3 17, 17 1, 17 2, 17 3, 17 17
5000
81 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select pt with r.stmt# = cl.stmt#
none
5000
82 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with a.stmt# = pt.stmt#
FALSE
5000
83 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with a.stmt# = pt.varName
FALSE
5000
84 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select <s, s, n, n> with a.stmt# = p.procName
none
5000
85 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with a.stmt# = c.value
TRUE
5000
86 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select a with a.stmt# = c.value
15, 16, 7, 5
5000
87 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select a with r.stmt# = c.value
none
5000
88 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select <s1, c> with s1.stmt# = c.value
15 15, 16 16, 7 7, 5 5
5000
89 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select <s1, c, c1> with s1.stmt# = c.value
15 15 15, 16 16 15, 7 7 15, 5 5 15, 15 15 16, 16 16 16, 7 7 16, 5 5 16, 15 15 7, 16 16 7, 7 7 7, 5 5 7, 15 15 5, 16 16 5, 7 7 5, 5 5 5 
5000
90 - To be filled INVALID
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select <s1, c, c1> with r.stmt# = r1.value
none
5000
91 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select c with r.stmt# = n
15, 16, 7, 5
5000
92 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select r with r.stmt# = n
1, 2, 3, 17
5000
93 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select r1 with s.stmt# = n
1, 2, 3, 17
5000
94 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select s with s.stmt# = n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
95 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl;
Select s with s.stmt# = n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
96 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select a with with.stmt# = n
5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28
5000
97 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select with with with.stmt# = n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
98 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = "here"
FALSE
5000
99 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = 15
TRUE
5000
100 - To be filled - INVALID
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = -15
none
5000
101 - To be filled - INVALID
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = r.varName
FALSE
5000
102 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = s.stmt#
TRUE
5000
103 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select c with c.value = s.stmt#
15, 16, 7, 5
5000
104 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select c with c.value = c.value
15, 16, 7, 5
5000
105 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = c.value
TRUE
5000
106 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with c.value = c1.value
TRUE
5000
107 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select <c, c1> with c.value = c1.value
15 15, 15 16, 15 7, 15 5, 16 15, 16 16, 16 7, 16 5, 7 15, 7 16, 7 7, 7 5, 5 15, 5 16, 5 7, 5 5
5000
108 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select <c1, c1> with c.value = c1.value
15 15, 16 16, 7 7, 5 5
5000
109 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select <c1> with c.value = n
15, 16, 7, 5
5000
110 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select n with c.value = n
15, 16, 7, 5
5000
111 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select c with c.value = n
15, 16, 7, 5
5000
112 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select <c, c, n, n> with c.value = n
15 15 15 15, 16 16 16 16, 7 7 7 7, 5 5 5 5
5000
113 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with n = 12
TRUE
5000
114 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with n = "n"
FALSE
5000
115 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with n = v.varName
FALSE
5000
116 - To be filled - TO BE VERIFIED SYNTAX / SEMANTIC?
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with n = n.varName
FALSE
5000
117 - To be filled - TO BE VERIFIED SYNTAX / SEMANTIC?
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with n = n.stmt#
FALSE
5000
118 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a;
Select BOOLEAN with n = p.procName
FALSE
5000
119 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select BOOLEAN with n = r.varName
FALSE
5000
120 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select BOOLEAN with n = r.stmt#
TRUE
5000
121 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select r with n = r.stmt#
1, 2, 3, 17
5000
122 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select <r, pt> with n = pt.stmt#
1 29, 2 29, 3 29, 17 29
5000
123 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select n with n = a.stmt#
5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 28
5000
124 - To be filled
stmt with, s1; procedure p; constant c, c1; prog_line n; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select n with n = n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
125 - To be filled
stmt s, s1; procedure p; constant c, c1; prog_line with; read r, r1, r2; variable v; print pt; call cl; assign a; if ifs;
Select with with with = with
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000